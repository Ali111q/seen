androidx.fragment.app.Fragment$2
androidx.savedstate.Recreator
androidx.window.layout.SidecarCompat$Companion
com.sangcomz.fishbun.util.SquareImageView
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.window.layout.WindowMetricsCalculator$Companion
com.google.android.material.snackbar.Snackbar$SnackbarLayout
androidx.activity.ImmLeaksCleaner
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.WindowInfoTrackerImpl
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.embedding.MatcherUtils
androidx.appcompat.widget.ActionBarContainer
androidx.window.R$id
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.window.embedding.EmbeddingAdapter
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.core.Version$bigInteger$2
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.ActivityCompatHelperApi30
androidx.appcompat.app.AppCompatViewInflater
androidx.window.layout.WindowBackend
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.layout.FoldingFeature$Orientation
com.sangcomz.fishbun.ui.picker.PickerActivity
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.bumptech.glide.GeneratedAppGlideModule
com.google.android.material.internal.NavigationMenuView
androidx.window.core.Bounds
com.sangcomz.fishbun.bean.Album$1
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
androidx.appcompat.widget.ActionMenuView
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.embedding.ActivityFilter
com.sangcomz.fishbun.util.RadioWithTextButton
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.activity.result.ActivityResultRegistry$1
androidx.appcompat.widget.ActionBarContextView
androidx.window.layout.ActivityCompatHelperApi24
androidx.window.layout.DisplayFeature
androidx.appcompat.widget.Toolbar
androidx.window.core.Version$Companion
androidx.core.app.RemoteActionCompat
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.layout.WindowInfoTracker
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.appcompat.widget.AppCompatImageButton
androidx.window.embedding.SplitPairRule
com.google.android.material.behavior.SwipeDismissBehavior
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.embedding.SplitRule$LayoutDir
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.android.material.transformation.ExpandableTransformationBehavior
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.embedding.SplitRule
androidx.window.embedding.SplitPairFilter
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.appcompat.app.AlertController$RecycleListView
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.sangcomz.fishbun.util.SquareFrameLayout
androidx.versionedparcelable.CustomVersionedParcelable
androidx.recyclerview.widget.LinearLayoutManager
androidx.window.layout.HardwareFoldingFeature
com.bumptech.glide.load.ImageHeaderParser$ImageType
io.flutter.plugins.GeneratedPluginRegistrant
androidx.core.widget.NestedScrollView
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.layout.ExtensionInterfaceCompat
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.layout.SidecarAdapter$Companion
com.sangcomz.fishbun.FishBunFileProvider
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.embedding.SplitRule$Api30Impl
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.appcompat.view.menu.ListMenuItemView
androidx.window.embedding.SplitRuleParser
androidx.lifecycle.SavedStateHandleController
com.google.android.material.internal.NavigationMenuItemView
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
io.flutter.embedding.engine.FlutterJNI
androidx.window.embedding.ActivityRule
androidx.window.java.R
com.google.android.material.snackbar.SnackbarContentLayout
androidx.appcompat.view.menu.ActionMenuItemView
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.recyclerview.widget.GridLayoutManager
io.flutter.plugin.platform.SingleViewPresentation
androidx.viewpager.widget.ViewPager
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.appcompat.widget.ViewStubCompat
androidx.lifecycle.DefaultLifecycleObserver
androidx.appcompat.widget.DialogTitle
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.android.material.transformation.FabTransformationBehavior
androidx.appcompat.widget.AlertDialogLayout
androidx.activity.ComponentActivity$5
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.activity.ComponentActivity$4
androidx.window.core.Version
androidx.window.layout.WindowLayoutInfo
androidx.window.layout.SidecarWindowBackend$Companion
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.embedding.EmbeddingRule
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
com.sangcomz.fishbun.util.TouchImageView$OnTouchImageViewListener
androidx.appcompat.widget.SearchView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.view.AccessibilityViewEmbedder
androidx.lifecycle.Lifecycling$1
androidx.core.app.CoreComponentFactory
com.sangcomz.fishbun.bean.Album
com.sangcomz.fishbun.ui.detail.DetailActivity
com.dorto.seen.MainActivity
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.android.material.internal.BaselineLayout
androidx.window.R$attr
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
com.sangcomz.fishbun.util.TouchImageView
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.material.transformation.ExpandableBehavior
com.sangcomz.fishbun.util.TouchImageView$State
androidx.activity.ComponentActivity$3
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.appcompat.view.menu.ExpandedMenuView
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.embedding.EmbeddingTranslatingCallback
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.window.embedding.EmbeddingCompat
com.google.android.material.appbar.AppBarLayout
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.transition.FragmentTransitionSupport
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.constraintlayout.widget.ConstraintLayout
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.layout.FoldingFeature
androidx.window.layout.FoldingFeature$State
androidx.window.core.ExperimentalWindowApi
com.google.android.material.internal.CheckableImageButton
androidx.appcompat.widget.ButtonBarLayout
androidx.versionedparcelable.ParcelImpl
androidx.window.embedding.SplitController$Companion
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.WindowMetrics
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.layout.SidecarAdapter
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
androidx.annotation.Keep
kotlin.internal.jdk8.JDK8PlatformImplementations
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.window.R
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.window.R$styleable
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.embedding.EmptyEmbeddingComponent
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.window.layout.WindowInfoTrackerDecorator
io.flutter.view.FlutterCallbackInformation
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.lifecycle.SavedStateHandleAttacher
androidx.window.layout.SidecarCompat
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.embedding.ActivityStack
androidx.lifecycle.LegacySavedStateHandleController$1
io.flutter.plugins.urllauncher.WebViewActivity
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
com.google.android.material.transformation.FabTransformationSheetBehavior
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.window.layout.SidecarWindowBackend
androidx.appcompat.widget.ContentFrameLayout
com.google.android.material.bottomappbar.BottomAppBar$Behavior
androidx.recyclerview.widget.RecyclerView
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.embedding.SplitPlaceholderRule
androidx.window.layout.WindowMetricsCalculator
androidx.window.embedding.SplitInfo
androidx.window.layout.EmptyDecorator
androidx.window.embedding.SplitController
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
com.sangcomz.fishbun.ui.album.AlbumActivity
androidx.window.layout.SidecarCompat$DistinctElementCallback
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.window.R$styleable: int ActivityRule_alwaysExpand
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.embedding.SplitRule: int minWidth
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int primaryActivityName
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.window.R$attr: int secondaryActivityAction
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.window.R$attr: int finishSecondaryWithPrimary
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
androidx.window.core.Version: int patch
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.R$id: int rtl
androidx.window.R$attr: int alwaysExpand
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.window.R$attr: int placeholderActivityName
kotlinx.coroutines.CancellableContinuationImpl: int _decision
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.embedding.SplitInfo: float splitRatio
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.R$styleable: int SplitPairRule_splitRatio
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.DispatchedCoroutine: int _decision
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.window.R$styleable: int[] SplitPairFilter
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.window.R$id: int ltr
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
kotlin.jvm.internal.FunctionReference: int flags
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.appcompat.app.AppCompatViewInflater: java.util.Map sConstructorMap
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int secondaryActivityName
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
androidx.window.embedding.SplitPairRule: boolean clearTop
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State NONE
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
androidx.window.core.Version: int major
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.sangcomz.fishbun.bean.Album: java.lang.String bucketName
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
kotlinx.coroutines.channels.ArrayChannel: int size
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State ZOOM
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.window.R$attr: int splitMinWidth
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.exoplayer2.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.window.core.Bounds: int right
com.sangcomz.fishbun.bean.Album: int counter
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.embedding.SplitRule: float splitRatio
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State FLING
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.window.core.Bounds: int top
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule: int minSmallestWidth
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.vorbis.VorbisComment: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int ActivityFilter_activityAction
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
androidx.window.R$attr: int clearTop
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.window.R$attr: int activityName
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
kotlin.jvm.internal.FunctionReference: int arity
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.window.R$attr: int splitRatio
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.window.R$id: int locale
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.window.embedding.SplitRule: int layoutDirection
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.window.core.Version: int minor
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.R$attr: int activityAction
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.window.R$styleable: int[] SplitPairRule
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
kotlin.jvm.internal.Lambda: int arity
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.sangcomz.fishbun.bean.Album: java.lang.String thumbnailPath
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.window.core.Bounds: int bottom
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.window.R$attr: int splitMinSmallestWidth
androidx.window.core.Version: java.lang.String description
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.window.R$attr: int splitLayoutDirection
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.R$styleable: int[] ActivityFilter
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.window.R$styleable: int[] ActivityRule
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.window.embedding.SplitController: boolean sDebug
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.core.Bounds: int left
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State ANIMATE_ZOOM
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State[] $VALUES
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
com.sangcomz.fishbun.bean.Album: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.sangcomz.fishbun.bean.Album: long bucketId
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.window.layout.SidecarCompat: java.lang.String TAG
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State DRAG
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean canDiscardUpstreamMediaChunksFromIndex(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void discardBuffer(long,boolean)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionRebuffer()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createExtraVariable()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.google.android.material.button.MaterialButton: void setIconSize(int)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.constraintlayout.solver.ArrayLinkedVariables: java.lang.String toString()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.ExoPlayerImpl$Api31: com.google.android.exoplayer2.analytics.PlayerId registerMediaMetricsListener(android.content.Context,com.google.android.exoplayer2.ExoPlayerImpl,boolean)
com.sangcomz.fishbun.util.SquareFrameLayout: SquareFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.exoplayer2.audio.MpegAudioUtil: java.lang.String[] access$100()
com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(java.lang.String,boolean,com.google.android.exoplayer2.drm.DrmInitData$SchemeData[])
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: void getWidgetsToSolveTraversal(java.util.ArrayList,androidx.constraintlayout.solver.widgets.ConstraintWidget)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void buildTracksFromSampleStreams()
androidx.appcompat.view.SupportMenuInflater: <clinit>()
androidx.exifinterface.media.ExifInterface: void printAttributes()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
io.flutter.util.ViewUtils$$InternalSyntheticLambda$1$c0aa1774cd8831658692c914ac238b83368f5d4eb3adf605ed1d77e75423b804$0: boolean run(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.window.core.Version: int hashCode()
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int[] getDirectPlaybackSupportedEncodings()
com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser: long parseMotionPhotoPresentationTimestampUsFromDescription(org.xmlpull.v1.XmlPullParser)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.google.android.exoplayer2.extractor.ts.UserDataReader: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray)
com.sangcomz.fishbun.util.TouchImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.exoplayer2.MediaPeriodHolder: long applyTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelectorResult,long,boolean,boolean[])
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.android.exoplayer2.source.SampleQueue: void commitSample(long,int,long,int,com.google.android.exoplayer2.extractor.TrackOutput$CryptoData)
com.google.android.exoplayer2.drm.DrmUtil$Api18: boolean isNotProvisionedException(java.lang.Throwable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup withAdCount(int)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.window.layout.WindowLayoutInfo: int hashCode()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.constraintlayout.solver.widgets.Optimizer: void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionPlayWhenReadyChanged(boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setFrame(int,int,int,int)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.exoplayer2.ExoPlayerImplInternal: ExoPlayerImplInternal(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.trackselection.TrackSelectorResult,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.upstream.BandwidthMeter,int,boolean,com.google.android.exoplayer2.analytics.AnalyticsCollector,com.google.android.exoplayer2.SeekParameters,com.google.android.exoplayer2.LivePlaybackSpeedControl,long,boolean,android.os.Looper,com.google.android.exoplayer2.util.Clock,com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdateListener,com.google.android.exoplayer2.analytics.PlayerId)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.android.exoplayer2.util.Util: java.util.HashMap createIsoLanguageReplacementMap()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateTrackSelectionPlaybackSpeed(float)
com.google.android.exoplayer2.text.subrip.SubripSubtitle: java.util.List getCues(long)
com.google.android.exoplayer2.drm.DrmUtil$Api21: boolean isMediaDrmStateException(java.lang.Throwable)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.constraintlayout.solver.widgets.Barrier: void analyze(int)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
com.sangcomz.fishbun.ui.detail.DetailActivity: void onClick(android.view.View)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.collection.SimpleArrayMap: int indexOfNull()
androidx.window.core.Bounds: boolean isZero()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean onPlaylistError(android.net.Uri,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void resetCueBuilders()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isSpreadWidth()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitRule: SplitRule()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.constraintlayout.solver.LinearSystem: int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
androidx.window.core.Version: int getMinor()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.LinearSystem: void reset()
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery: android.database.Cursor query(android.net.Uri)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllEndsEqual()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setSampleOffsetUs(long)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.sangcomz.fishbun.adapter.view.DetailViewPagerAdapter: int getCount()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void reselectTracksInternal()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: com.google.android.exoplayer2.source.TrackGroupArray buildTrackGroups(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest,com.google.android.exoplayer2.drm.DrmSessionManager)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.cardview.widget.CardView: void setRadius(float)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.exoplayer2.audio.AudioAttributes$Api29: void setAllowedCapturePolicy(android.media.AudioAttributes$Builder,int)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
androidx.window.R$styleable: R$styleable()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.common.collect.RegularImmutableList: java.lang.Object[] internalArray()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format getFormat(int)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: boolean equals(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinStart(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
com.google.android.exoplayer2.upstream.FileDataSource$Api21: boolean isPermissionError(java.lang.Throwable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.window.core.Version: int getMajor()
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean configureRetry(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean obtainsChunksForPlaylist(android.net.Uri)
com.google.android.exoplayer2.extractor.ts.SeiReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdateReadingPeriod()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.constraintlayout.solver.widgets.Guideline: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
com.google.android.exoplayer2.upstream.SlidingPercentile: void addSample(int,float)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.VideoFrameMetadataListener getVideoFrameMetadataListener()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: void getNextChunk(long,long,java.util.List,com.google.android.exoplayer2.source.chunk.ChunkHolder)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,int[])
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int getTrackIndexOfNextReadSample(long)
androidx.window.embedding.ActivityStack: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: void writeToParcel(android.os.Parcel,int)
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.google.android.exoplayer2.extractor.avi.AviExtractor: void parseIdx1Body(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
com.sangcomz.fishbun.util.TouchImageView: float getMaxZoom()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seekToUs(long,boolean)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleC1Command(int)
androidx.constraintlayout.solver.widgets.Optimizer: boolean optimizableMatchConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
androidx.window.layout.WindowMetrics: int hashCode()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.core.view.ViewPropertyAnimatorCompat$Api16Impl: android.view.ViewPropertyAnimator withEndAction(android.view.ViewPropertyAnimator,java.lang.Runnable)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.trackselection.TrackSelectorResult selectTracks(float,com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderer(int,boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void resetRendererPosition(long)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onPlaylistChanged()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void release()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithAppendedEntriesFrom(com.google.android.exoplayer2.metadata.Metadata)
com.google.android.exoplayer2.source.TrackGroup: int indexOf(com.google.android.exoplayer2.Format)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.core.Bounds: int hashCode()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void release()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.collection.LongSparseArray: void removeAt(int)
com.google.android.exoplayer2.audio.DefaultAudioSink: void configure(com.google.android.exoplayer2.Format,int,int[])
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.sangcomz.fishbun.util.RadioWithTextButton: android.graphics.Rect get_centerRect()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
com.google.common.collect.RegularImmutableSet: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.exifinterface.media.ExifInterface: ExifInterface(java.io.InputStream,int)
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object get(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.google.android.exoplayer2.PlaylistTimeline: PlaylistTimeline(java.util.Collection,com.google.android.exoplayer2.source.ShuffleOrder)
com.google.android.exoplayer2.source.SampleQueue: int peekSampleMetadata(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean,boolean,com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.android.exoplayer2.extractor.FlacMetadataReader: java.util.List readVorbisCommentMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,int)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.constraintlayout.solver.widgets.Analyzer: int getMaxDimensionTraversal(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean,int)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.collection.SimpleArrayMap: int hashCode()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentActivity: FragmentActivity()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void updateManifest(com.google.android.exoplayer2.source.dash.manifest.DashManifest,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput getMappedTrackOutput(int,int)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean drainToEndOfStream()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int skipData(int,long)
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.sangcomz.fishbun.bean.Album$1: com.sangcomz.fishbun.bean.Album[] newArray(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.google.android.exoplayer2.PlaylistTimeline: java.lang.Object getChildUidByChildIndex(int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.android.exoplayer2.ExoPlayerImpl: void setVideoOutputInternal(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isChainHead(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)
androidx.transition.Visibility: java.lang.String[] getTransitionProperties()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.window.core.Bounds: int getTop()
com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest copy(java.util.List)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.sangcomz.fishbun.util.RadioWithTextButton: void setCircleColor(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getCleanFile(int)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.Optimizer: boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap buildOrThrow()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoadCanceled(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long,boolean)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: long resolveTimeToLiveEdgeUs(long)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void flush()
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void packetFinished()
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config)
androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: DiskLruCache$Entry(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setInputType(int)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void seekToUs(long)
com.google.android.exoplayer2.drm.FrameworkMediaDrm$Api31: boolean requiresSecureDecoder(android.media.MediaDrm,java.lang.String)
androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem)
com.google.android.exoplayer2.audio.DefaultAudioSink: void flushAudioProcessors()
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxStart(int)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeFinishPrepare()
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.window.core.Bounds: int getBottom()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser: boolean parseMotionPhotoFlagFromDescription(org.xmlpull.v1.XmlPullParser)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.google.android.exoplayer2.text.ttml.TtmlNode: void applyStyleToOutput(java.util.Map,com.google.android.exoplayer2.text.Cue$Builder,int,int,int)
androidx.constraintlayout.solver.widgets.Optimizer: void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource: void processManifest()
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)
com.google.android.exoplayer2.source.CompositeSequenceableLoader: long getBufferedPositionUs()
androidx.window.embedding.ActivityStack: boolean isEmpty()
com.google.android.exoplayer2.drm.DrmUtil$Api18: boolean isDeniedByServerException(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.android.exoplayer2.decoder.SimpleDecoder: boolean decode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: java.lang.String buildHevcCodecString(int,boolean,int,int,int[],int)
androidx.exifinterface.media.ExifInterface: void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.sangcomz.fishbun.util.RadioWithTextButton: void setText(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.google.android.exoplayer2.drm.DrmInitData: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.Pools$SimplePool: boolean release(java.lang.Object)
com.sangcomz.fishbun.util.TouchImageView: float getImageHeight()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int readSample(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.constraintlayout.solver.Pools$SimplePool: java.lang.Object acquire()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.bumptech.glide.disklrucache.DiskLruCache$Value: java.io.File getFile(int)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void initExtraTracks()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void updateManifest(com.google.android.exoplayer2.source.dash.manifest.DashManifest,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.Object build()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
com.google.android.exoplayer2.metadata.Metadata: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long getBufferedPositionUs()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getLargestQueuedTimestampUs(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void discardBuffer(long,boolean)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.tekartik.sqflite.Database: boolean doQuery(com.tekartik.sqflite.operation.Operation)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long,boolean)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: SsMediaPeriod(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest,com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSessionEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.upstream.Allocator)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.collection.ArraySet: int indexOfNull()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinEnd(int)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.sangcomz.fishbun.ui.detail.DetailActivity: DetailActivity()
androidx.core.content.FileProvider: FileProvider()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean hasReadingPeriodFinishedReading()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: BaseTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int[],int)
com.google.android.exoplayer2.audio.DefaultAudioSink$Api31: void setLogSessionIdOnAudioTrack(android.media.AudioTrack,com.google.android.exoplayer2.analytics.PlayerId)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
com.google.android.exoplayer2.metadata.Metadata: int length()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.exoplayer2.metadata.Metadata: Metadata(android.os.Parcel)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int getMaxSupportedChannelCountForPassthrough(int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean replaceStreamsOrDisableRendererForTransition()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.android.exoplayer2.extractor.ts.UserDataReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.google.android.exoplayer2.source.TrackGroup: com.google.android.exoplayer2.Format getFormat(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.constraintlayout.solver.LinearSystem: void updateRowFromVariables(androidx.constraintlayout.solver.ArrayRow)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void onChunkLoadCompleted(com.google.android.exoplayer2.source.chunk.Chunk)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.exifinterface.media.ExifInterface: void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.spherical.CameraMotionListener getCameraMotionListener()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.common.collect.RegularImmutableSet: int copyIntoArray(java.lang.Object[],int)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.TextInformationFrame parseStandardGenreAttribute(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.constraintlayout.solver.widgets.Analyzer: boolean traverse(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,java.util.List,boolean)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData$SchemeData get(int)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.sangcomz.fishbun.define.Define$BUNDLE_NAME: com.sangcomz.fishbun.define.Define$BUNDLE_NAME valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setClickableOrFocusableBasedOnAccessibility(boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: com.google.android.exoplayer2.Format[] access$300(com.google.android.exoplayer2.source.chunk.ChunkSampleStream)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.sangcomz.fishbun.util.TouchImageView: void setState(com.sangcomz.fishbun.util.TouchImageView$State)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.android.exoplayer2.video.VideoFrameReleaseHelper$Api30: void setSurfaceFrameRate(android.view.Surface,float)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.sangcomz.fishbun.bean.Album$1: java.lang.Object[] newArray(int)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int hashCode()
com.google.android.exoplayer2.drm.DrmUtil$Api21: int mediaDrmStateExceptionToErrorCode(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.sangcomz.fishbun.util.TouchImageView: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
androidx.collection.ArraySet: void ensureCapacity(int)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput: int[] getWriteIndices()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.sangcomz.fishbun.bean.Album$1: Album$1()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
io.flutter.plugins.imagepicker.ImagePickerUtils: boolean isPermissionPresentInManifest(android.content.Context,java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void doSomeWork()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int readData(int,com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
androidx.window.R$id: R$id()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderers(boolean[])
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.google.common.base.Function: java.lang.Object apply(java.lang.Object)
androidx.constraintlayout.widget.Barrier: int getType()
com.google.android.exoplayer2.source.ClippingMediaPeriod: long seekToUs(long)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.collection.ArraySet: void allocArrays(int)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: java.io.File queryForFilePath(android.net.Uri)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.sangcomz.fishbun.util.TouchImageView: void setZoom(com.sangcomz.fishbun.util.TouchImageView)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.google.android.exoplayer2.text.cea.Cea708Decoder: Cea708Decoder(int,java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.android.exoplayer2.source.TrackGroup: void verifyCorrectness()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.DecoderInputBuffer dequeueInputBuffer()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.collection.ArraySet: java.lang.Object removeAt(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
androidx.collection.SparseArrayCompat: void gc()
com.sangcomz.fishbun.adapter.view.DetailViewPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder updateSelectedBaseUrl(int)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput: void setSampleOffsetUs(long)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.exoplayer2.MediaPeriodHolder: long applyTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelectorResult,long,boolean)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)
androidx.window.core.Version: java.lang.String toString()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isSpreadHeight()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void release()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: boolean equals(java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.window.R: R()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
androidx.constraintlayout.solver.Pools$SimplePool: void releaseAll(java.lang.Object[],int)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setDefaultStereoMode(int)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.sangcomz.fishbun.bean.Album: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(android.os.Parcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: int getCodecCount()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseVideoSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,int,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData,int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setDrmInitData(com.google.android.exoplayer2.drm.DrmInitData)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void startLoading()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAllRemainingSpans(int,int)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.collection.ArraySet: java.lang.Object[] toArray()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.Format[] getStreamFormats()
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.appcompat.widget.DialogTitle: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.sangcomz.fishbun.util.RadioWithTextButton: float getTextWidth()
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean continueLoading(long)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.common.base.Function: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.collection.LongSparseArray: void clear()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData createSessionCreationData(com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.drm.DrmInitData)
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
com.google.android.exoplayer2.PlaylistTimeline: com.google.android.exoplayer2.Timeline getTimelineByChildIndex(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdateLoadingPeriod()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void selectNewStreams(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long,int[])
com.google.android.exoplayer2.source.dash.manifest.UrlTemplate: java.lang.String buildUri(java.lang.String,long,int,long)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handlePlaybackParameters(com.google.android.exoplayer2.PlaybackParameters,float,boolean,boolean)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void discardBuffer(long,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: DashMediaPeriod(int,com.google.android.exoplayer2.source.dash.manifest.DashManifest,com.google.android.exoplayer2.source.dash.BaseUrlExclusionList,int,com.google.android.exoplayer2.source.dash.DashChunkSource$Factory,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSessionEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,long,com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerEmsgCallback,com.google.android.exoplayer2.analytics.PlayerId)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.constraintlayout.solver.widgets.Analyzer: void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.common.collect.RegularImmutableSet: com.google.common.collect.ImmutableList createAsList()
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String toString()
com.google.android.exoplayer2.source.hls.HlsChunkSource: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.android.exoplayer2.util.TimedValueQueue: java.lang.Object popFirst()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: DefaultSsChunkSource(com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest,int,com.google.android.exoplayer2.trackselection.ExoTrackSelection,com.google.android.exoplayer2.upstream.DataSource)
com.google.android.exoplayer2.upstream.DefaultAllocator: void release(com.google.android.exoplayer2.upstream.Allocator$AllocationNode)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void getNextChunk(long,long,java.util.List,com.google.android.exoplayer2.source.chunk.ChunkHolder)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.common.collect.RegularImmutableList: int copyIntoArray(java.lang.Object[],int)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeStartDeferredRetry(int)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.window.embedding.ActivityRule: int hashCode()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.exifinterface.media.ExifInterface: void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
com.sangcomz.fishbun.ui.picker.PickerActivity: PickerActivity()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setAllRendererStreamsFinal(long)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: com.google.android.exoplayer2.source.chunk.ChunkSampleStream$EmbeddedSampleStream selectEmbeddedTrack(long,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.exifinterface.media.ExifInterface: void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.constraintlayout.solver.LinearSystem: int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row)
androidx.window.embedding.ActivityStack: int hashCode()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.google.android.exoplayer2.ExoPlayerImpl: ExoPlayerImpl(com.google.android.exoplayer2.ExoPlayer$Builder,com.google.android.exoplayer2.Player)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.android.exoplayer2.decoder.SimpleDecoder: void setInitialInputBufferSize(int)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$Api31: void setLogSessionIdToMediaCodecFormat(com.google.android.exoplayer2.mediacodec.MediaCodecAdapter$Configuration,com.google.android.exoplayer2.analytics.PlayerId)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setupAudioProcessors()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.sangcomz.fishbun.BaseActivity: BaseActivity()
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.window.embedding.SplitInfo: int hashCode()
com.sangcomz.fishbun.util.TouchImageView: void setZoom(float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.window.core.Bounds: int getRight()
com.google.android.exoplayer2.source.ads.AdPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup getAdGroup(int)
androidx.constraintlayout.solver.widgets.ChainHead: void defineChainProperties()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.dorto.seen.MainActivity: MainActivity()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeFinishPrepare()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.constraintlayout.solver.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.sangcomz.fishbun.util.TouchImageView: float getMinZoom()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void initMediaChunkLoad(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: long seekToUs(long)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: int getPrimaryStreamIndex(int,int[])
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.constraintlayout.solver.widgets.ChainHead: boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String[] getStyleIds()
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void layout()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.window.core.Bounds: java.lang.String toString()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void appendViewToAllSpans(android.view.View)
androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean isReady(int)
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: void release()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: void updateManifest(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void processMoovAtom(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.google.common.collect.RegularImmutableList: java.lang.Object get(int)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateLoadControlTrackSelection(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.sangcomz.fishbun.define.Define$BUNDLE_NAME: com.sangcomz.fishbun.define.Define$BUNDLE_NAME[] values()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: void ensureMediaCodecInfosInitialized()
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
com.sangcomz.fishbun.util.TouchImageView: void setMinZoom(float)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetResolutionNodes()
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoaderReleased()
com.google.android.exoplayer2.upstream.DefaultAllocator: void release(com.google.android.exoplayer2.upstream.Allocation)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int getExtractedSamplesCount()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice valueOf(java.lang.String)
com.google.android.exoplayer2.MediaPeriodHolder: void enableTrackSelectionsInResult()
androidx.window.java.R: R()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: ChapterTocFrame(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.android.exoplayer2.drm.DrmInitData: boolean equals(java.lang.Object)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.sangcomz.fishbun.Fishton: android.net.Uri[] getPickerImages()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.ActivityCompat$1: void run()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.exifinterface.media.ExifInterface: <clinit>()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: long seekToPeriodPosition(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,boolean,boolean)
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.bumptech.glide.load.engine.GlideException: GlideException(java.lang.String,java.util.List)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.sangcomz.fishbun.bean.Album: int describeContents()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void reset()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: DefaultDashChunkSource(com.google.android.exoplayer2.source.chunk.ChunkExtractor$Factory,com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.source.dash.manifest.DashManifest,com.google.android.exoplayer2.source.dash.BaseUrlExclusionList,int,int[],com.google.android.exoplayer2.trackselection.ExoTrackSelection,int,com.google.android.exoplayer2.upstream.DataSource,long,int,boolean,java.util.List,com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler,com.google.android.exoplayer2.analytics.PlayerId)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.exoplayer2.metadata.Metadata: java.lang.String toString()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void maybeThrowPrepareError()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getBufferedPositionUs()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean finishedReadingChunk(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.upstream.DefaultAllocator: void trim()
com.sangcomz.fishbun.util.TouchImageView$State: TouchImageView$State(java.lang.String,int)
com.sangcomz.fishbun.util.SquareImageView: SquareImageView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.google.android.exoplayer2.source.ads.AdPlaybackState: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.google.android.exoplayer2.ExoPlayerImplInternal: void setForegroundModeInternal(boolean,java.util.concurrent.atomic.AtomicBoolean)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: ChapterFrame(android.os.Parcel)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: boolean haveReadFromMediaChunk(int)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
com.sangcomz.fishbun.bean.Album: Album(android.os.Parcel)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseOutputBufferInternal(com.google.android.exoplayer2.decoder.DecoderOutputBuffer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.exifinterface.media.ExifInterface: void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration copyWithBufferSize(int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: DefaultAudioSink$DefaultAudioProcessorChain(com.google.android.exoplayer2.audio.AudioProcessor[],com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor,com.google.android.exoplayer2.audio.SonicAudioProcessor)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.sangcomz.fishbun.util.RadioWithTextButton: void setStrokeColor(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: void discardBuffer(long,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prependViewToAllSpans(android.view.View)
kotlin.jvm.internal.Lambda: int getArity()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.google.android.exoplayer2.source.TrackGroup: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.SolverVariable: void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow)
com.sangcomz.fishbun.util.TouchImageView: void setOnTouchListener(android.view.View$OnTouchListener)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.lifecycle.SavedStateHandle: java.lang.Class[] access$getACCEPTABLE_CLASSES$cp()
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata$Entry get(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.sangcomz.fishbun.bean.Album$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.solver.LinearSystem: void releaseRows()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.exoplayer2.source.ads.AdPlaybackState: int hashCode()
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.android.exoplayer2.source.dash.EventSampleStream: int readData(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.google.android.exoplayer2.source.CompositeSequenceableLoader: boolean isLoading()
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: com.google.android.exoplayer2.source.chunk.BaseMediaChunk discardUpstreamMediaChunksFromIndex(int)
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.google.common.collect.RegularImmutableSet: java.lang.Object[] internalArray()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.bumptech.glide.disklrucache.DiskLruCache: com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String)
com.sangcomz.fishbun.permission.PermissionCheck: boolean CheckCameraPermission()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewPropertyAnimatorCompat$Api16Impl: android.view.ViewPropertyAnimator withLayer(android.view.ViewPropertyAnimator)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean onPlaylistError(android.net.Uri,long)
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int indexOf(com.google.android.exoplayer2.Format)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.constraintlayout.solver.LinearSystem: void addRow(androidx.constraintlayout.solver.ArrayRow)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.Track parseTrak(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom,long,com.google.android.exoplayer2.drm.DrmInitData,boolean,boolean)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.util.TimedValueQueue: void clear()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.sangcomz.fishbun.util.TouchImageView: android.graphics.RectF getZoomedRect()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void stopRenderers()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.core.Version$Companion: Version$Companion()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.sangcomz.fishbun.util.TouchImageView: android.widget.ImageView$ScaleType getScaleType()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.android.exoplayer2.source.hls.HlsChunkSource: int getChunkPublicationState(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
com.google.android.exoplayer2.metadata.Metadata: int hashCode()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.window.embedding.SplitRule: int getLayoutDirection()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.collection.SparseArrayCompat: void clear()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: android.view.Surface getVideoSurface()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateResolutionNodes()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoaderReleased()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery: android.database.Cursor query(android.net.Uri)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.collection.LongSparseArray: LongSparseArray(int)
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onPrepared()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void release()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.util.TimedValueQueue: void addUnchecked(long,java.lang.Object)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.exifinterface.media.ExifInterface: ExifInterface(java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void resetInternal(boolean,boolean,boolean,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.audio.AudioProcessor[] getAudioProcessors()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void release(com.google.android.exoplayer2.source.chunk.ChunkSampleStream$ReleaseCallback)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: <clinit>()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.sangcomz.fishbun.util.RadioWithTextButton: void setDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.google.common.collect.ImmutableMap$Builder: void sortEntries()
com.google.android.exoplayer2.MediaPeriodHolder: void disassociateNoSampleRenderersWithEmptySampleStream(com.google.android.exoplayer2.source.SampleStream[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.google.android.exoplayer2.text.cea.Cea708Decoder: java.util.List getDisplayCues()
androidx.window.embedding.SplitRule: int getMinWidth()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.Barrier: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.cardview.widget.CardView: float getRadius()
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.core.Bounds: boolean isEmpty()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxEnd(int)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean seekInsideBufferUs(boolean[],long)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData copyWithSchemeType(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.recyclerview.widget.GridLayoutManager: void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithAppendedEntries(com.google.android.exoplayer2.metadata.Metadata$Entry[])
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.window.core.Version: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri,int)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.sangcomz.fishbun.util.TouchImageView: TouchImageView(android.content.Context,android.util.AttributeSet)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.constraintlayout.solver.widgets.Optimizer: void setOptimizedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int)
com.sangcomz.fishbun.util.RadioWithTextButton: android.graphics.Rect getCenterRect()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
com.google.android.exoplayer2.extractor.avi.AviExtractor: com.google.android.exoplayer2.extractor.avi.ChunkReader getChunkReader(int)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsMediaChunk discardUpstreamMediaChunksFromIndex(int)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.google.android.exoplayer2.source.hls.HlsChunkSource: void getNextChunk(long,long,java.util.List,boolean,com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] access$300()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.sangcomz.fishbun.util.TouchImageView: float getImageWidth()
androidx.collection.ArraySet: ArraySet(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.PlaybackInfo handlePositionDiscontinuity(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,long,boolean,int)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.exoplayer2.audio.DefaultAudioSink: void reset()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer getInputBuffer(int)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
com.sangcomz.fishbun.bean.Album$1: com.sangcomz.fishbun.bean.Album createFromParcel(android.os.Parcel)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int readData(int,com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.collection.ArraySet: boolean add(java.lang.Object)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.sangcomz.fishbun.util.TouchImageView: void setOnTouchImageViewListener(com.sangcomz.fishbun.util.TouchImageView$OnTouchImageViewListener)
androidx.collection.LongSparseArray: void gc()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.collection.ArraySet: void clear()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: android.media.MediaCodecInfo$CodecProfileLevel[] getProfileLevels()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.sangcomz.fishbun.util.TouchImageView: android.graphics.PointF getScrollPosition()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.collection.SimpleArrayMap: void clear()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableCollection createValues()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long seekToUs(long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeThrowError(int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData merge(com.google.android.exoplayer2.drm.DrmInitData)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createSlackVariable()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionDiscontinuity()
com.google.android.exoplayer2.source.ads.AdPlaybackState: java.lang.String toString()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int skipData(int,long)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: void reevaluateBuffer(long)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void mapSampleQueuesToMatchTrackGroups()
androidx.transition.ChangeBounds: java.lang.String[] getTransitionProperties()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer getOutputBuffer(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.google.android.exoplayer2.drm.FrameworkMediaDrm$Api31: void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm,byte[],com.google.android.exoplayer2.analytics.PlayerId)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.google.android.exoplayer2.extractor.mp4.Track: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox getSampleDescriptionEncryptionBox(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long seekToUs(long)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.google.android.material.button.MaterialButton: int getCornerRadius()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
com.google.android.exoplayer2.metadata.Metadata: boolean equals(java.lang.Object)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.collection.ArraySet: java.lang.Object valueAt(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)
com.google.android.exoplayer2.audio.AudioAttributes$Api32: void setSpatializationBehavior(android.media.AudioAttributes$Builder,int)
androidx.window.R$attr: R$attr()
com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser: com.google.common.collect.ImmutableList parseMicroVideoOffsetFromDescription(org.xmlpull.v1.XmlPullParser)
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setUseSensorRotation(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void discardBuffer(long,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeThrowError(int)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
com.google.android.exoplayer2.util.Util: java.lang.String maybeReplaceLegacyLanguageTags(java.lang.String)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Version: int compareTo(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: void updateManifest(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
androidx.window.core.Bounds: int getHeight()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice[] values()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.sangcomz.fishbun.FishBunFileProvider: FishBunFileProvider()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void buildAndPrepareSampleStreamWrappers(long)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.sangcomz.fishbun.util.TouchImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.collection.LongSparseArray: void remove(long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllStartsEqual()
androidx.window.core.Bounds: int getLeft()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: boolean equals(java.lang.Object)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.sangcomz.fishbun.util.TouchImageView$State: com.sangcomz.fishbun.util.TouchImageView$State valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: boolean onChunkLoadError(com.google.android.exoplayer2.source.chunk.Chunk,boolean,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onEmsgLeafAtomRead(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.exoplayer2.util.TimedValueQueue: void clearBufferOnTimeDiscontinuity(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.sangcomz.fishbun.util.TouchImageView: void setScaleType(android.widget.ImageView$ScaleType)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.google.android.exoplayer2.extractor.ogg.OpusReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
androidx.constraintlayout.solver.ArrayLinkedVariables: void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[])
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format getSelectedFormat()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.exoplayer2.drm.DrmInitData: int hashCode()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: ChunkSampleStream(int,int[],com.google.android.exoplayer2.Format[],com.google.android.exoplayer2.source.chunk.ChunkSource,com.google.android.exoplayer2.source.SequenceableLoader$Callback,com.google.android.exoplayer2.upstream.Allocator,long,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSessionEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.sangcomz.fishbun.bean.Album: Album(long,java.lang.String,java.lang.String,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: com.google.android.exoplayer2.source.chunk.ChunkSampleStream buildSampleStream(com.google.android.exoplayer2.trackselection.ExoTrackSelection,long)
com.google.android.exoplayer2.PlaylistTimeline: java.util.List getChildTimelines()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.constraintlayout.solver.LinearSystem: void minimize()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.material.internal.BaselineLayout: int getBaseline()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void resetSampleQueues()
androidx.window.core.Bounds: int getWidth()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
androidx.window.core.Version: java.lang.String getDescription()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
androidx.exifinterface.media.ExifInterface: void validateImages()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
com.google.android.exoplayer2.extractor.avi.AviExtractor: void seek(long,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.sangcomz.fishbun.util.RadioWithTextButton: RadioWithTextButton(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
com.sangcomz.fishbun.util.TouchImageView: void setMaxZoom(float)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void discardBuffer(long,boolean)
com.google.android.exoplayer2.util.TimedValueQueue: void doubleCapacityIfFull()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.constraintlayout.solver.LinearSystem: void increaseTableSize()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderers()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseAudioSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,java.lang.String,boolean,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void release()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.sangcomz.fishbun.util.TouchImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
io.flutter.embedding.android.KeyEmbedderResponder: boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: android.media.MediaCodecInfo getCodecInfoAt(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
com.google.android.exoplayer2.decoder.SimpleDecoder: SimpleDecoder(com.google.android.exoplayer2.decoder.DecoderInputBuffer[],com.google.android.exoplayer2.decoder.DecoderOutputBuffer[])
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void resetSampleQueues()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.cardview.widget.CardView: float getCardElevation()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.constraintlayout.solver.widgets.Analyzer: int getParentBiasOffset(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
androidx.window.core.Version: int getPatch()
androidx.constraintlayout.solver.ArrayLinkedVariables: void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean)
com.sangcomz.fishbun.util.RadioWithTextButton: void setTextColor(int)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.google.android.exoplayer2.audio.DefaultAudioSink: void processBuffers(long)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.sangcomz.fishbun.ui.album.AlbumActivity: AlbumActivity()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: long getNextLoadPositionUs()
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.constraintlayout.solver.LinearSystem: void computeValues()
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: long seekToUs(long)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
com.google.android.exoplayer2.extractor.avi.AviExtractor: com.google.android.exoplayer2.extractor.avi.ChunkReader[] access$100(com.google.android.exoplayer2.extractor.avi.AviExtractor)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.extractor.TrackOutput prepareTrackOutput(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: void release()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest$StreamElement: android.net.Uri buildRequestUri(int,int)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.google.android.material.bottomappbar.BottomAppBar: void setFabDiameter(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: int getIconSize()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seekInsideBufferUs(long)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.sangcomz.fishbun.util.TouchImageView: void setImageResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.chunk.MediaChunkIterator[] createMediaChunkIterators(com.google.android.exoplayer2.source.hls.HlsMediaChunk,long)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.core.view.ViewPropertyAnimatorCompat$Api16Impl: android.view.ViewPropertyAnimator withStartAction(android.view.ViewPropertyAnimator,java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.exifinterface.media.ExifInterface: void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.constraintlayout.solver.widgets.Helper: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean isReady(int)
com.google.android.exoplayer2.source.ClippingMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: long getAvailableLiveDurationUs(long,long)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.google.android.exoplayer2.upstream.DefaultAllocator: DefaultAllocator(boolean,int,int)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.google.android.exoplayer2.drm.DrmUtil$Api23: boolean isMediaDrmResetException(java.lang.Throwable)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
androidx.window.embedding.SplitController: SplitController()
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.sangcomz.fishbun.util.TouchImageView: float getCurrentZoom()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void seek(long,long)
androidx.constraintlayout.solver.widgets.Analyzer: int getMaxDimension(androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,int)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: boolean continueLoading(long)
androidx.window.embedding.SplitRule: int hashCode()
com.google.android.exoplayer2.extractor.ts.SeiReader: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.android.exoplayer2.source.TrackGroup: int hashCode()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.google.android.exoplayer2.ExoPlayerImpl: void sendRendererMessage(int,int,java.lang.Object)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void startRenderers()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimizeForDimensions(int,int)
androidx.collection.SparseArrayCompat: void remove(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.sangcomz.fishbun.util.TouchImageView$OnTouchImageViewListener: void onMove()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createKeySet()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
com.google.android.exoplayer2.MediaPeriodHolder: void associateNoSampleRenderersWithEmptySampleStream(com.google.android.exoplayer2.source.SampleStream[])
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.viewpager.widget.ViewPager: int getClientWidth()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: boolean continueLoading(long)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseInputBufferInternal(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.google.android.exoplayer2.MediaPeriodHolder: void disableTrackSelectionsInResult()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.SampleQueue createSampleQueue(int,int)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.google.android.exoplayer2.source.chunk.BundledChunkExtractor: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void outputPendingMetadataSamples(long)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getDirtyFile(int)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void onLoaderReleased()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: int decodeBlockSize(byte,com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean continueLoading(long)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.viewpager.widget.ViewPager: int getPageMargin()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleDefineWindow(int)
com.google.android.exoplayer2.source.chunk.BundledChunkExtractor: com.google.android.exoplayer2.Format[] getSampleFormats()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.activity.ComponentActivity: ComponentActivity()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: long getMaxRendererReadPositionUs()
com.google.android.exoplayer2.upstream.DefaultAllocator: com.google.android.exoplayer2.upstream.Allocation allocate()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
